#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <ctype.h>

#define ALPHABET_SIZE 26
#define MAX_TEXT_LENGTH 1000


double expected_frequency[ALPHABET_SIZE] = {
    0.08167, 0.01492, 0.02782, 0.04253, 0.12702, 0.02228, 0.02015,
    0.06094, 0.06966, 0.00153, 0.00772, 0.04025, 0.02406, 0.06749,
    0.07507, 0.01929, 0.00095, 0.05987, 0.06327, 0.09056, 0.02758,
    0.00978, 0.02360, 0.00150, 0.01974, 0.00074
};

// Function to calculate the frequency of each letter in a text
void calculate_frequency(char *text, int *frequency) {
    for (int i = 0; i < ALPHABET_SIZE; i++) {
        frequency[i] = 0;
    }
    for (int i = 0; i < strlen(text); i++) {
        if (isalpha(text[i])) {
            char lower = tolower(text[i]);
            frequency[lower - 'a']++;
        }
    }
}

// Function to calculate a score for a text based on its frequency
double calculate_score(int *frequency, int text_length) {
    double score = 0;
    for (int i = 0; i < ALPHABET_SIZE; i++) {
        double observed_frequency = (double)frequency[i] / text_length;
        score += (observed_frequency - expected_frequency[i]) * 
                 (observed_frequency - expected_frequency[i]);
    }
    return score;
}

// Function to shift a text by a key
void shift_text(char *text, int key, char *shifted_text) {
    for (int i = 0; i < strlen(text); i++) {
        if (isalpha(text[i])) {
            char offset = isupper(text[i]) ? 'A' : 'a';
            shifted_text[i] = ((text[i] - offset + key) % ALPHABET_SIZE) + offset;
        } else {
            shifted_text[i] = text[i];
        }
    }
    shifted_text[strlen(text)] = '\0';
}

int main() {
    char ciphertext[MAX_TEXT_LENGTH];
    char shifted_text[MAX_TEXT_LENGTH];
    int frequency[ALPHABET_SIZE];
    int topN;

    printf("Enter the ciphertext: ");
    fgets(ciphertext, MAX_TEXT_LENGTH, stdin);
    ciphertext[strcspn(ciphertext, "\n")] = '\0';  


    printf("Enter the number of top possible plaintexts to display: ");
    scanf("%d", &topN);


    double scores[ALPHABET_SIZE];
    

    for (int shift = 0; shift < ALPHABET_SIZE; shift++) {
        shift_text(ciphertext, shift, shifted_text);
        calculate_frequency(shifted_text, frequency);
        scores[shift] = calculate_score(frequency, strlen(ciphertext));
    }


    printf("\nTop %d possible plaintexts:\n", topN);
    for (int i = 0; i < topN; i++) {

        double min_score = scores[0];
        int min_index = 0;
        for (int j = 1; j < ALPHABET_SIZE; j++) {
            if (scores[j] < min_score) {
                min_score = scores[j];
                min_index = j;
            }
        }


        shift_text(ciphertext, min_index, shifted_text);
        printf("Shift by %d: %s (Score: %.5f)\n", min_index, shifted_text, scores[min_index]);
        

        scores[min_index] = 1e9;
    }

    return 0;
}
