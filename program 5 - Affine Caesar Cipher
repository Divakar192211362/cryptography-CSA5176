#include <stdio.h>
#include <ctype.h>
#include <string.h> 


int gcd(int a, int b) {
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}


void encrypt(char plaintext[], int a, int b, char ciphertext[]) {
    for (int i = 0; plaintext[i] != '\0'; i++) {
        char ch = plaintext[i];
        if (isalpha(ch)) {
            char base = isupper(ch) ? 'A' : 'a';
            int p = ch - base; 
            int c = (a * p + b) % 26; 
            if (c < 0) c += 26; 
            ciphertext[i] = c + base; 
        } else {
            ciphertext[i] = ch; 
        }
    }
    ciphertext[strlen(plaintext)] = '\0'; 
}

int main() {
    int a, b;
    char plaintext[256], ciphertext[256];

    printf("Enter values for a and b: ");
    scanf("%d %d", &a, &b);

    
    while (gcd(a, 26) != 1) {
        printf("Invalid value for a. It must be coprime with 26. Enter a new value for a: ");
        scanf("%d", &a);
    }

   
    getchar(); 
    printf("Enter the plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    plaintext[strcspn(plaintext, "\n")] = '\0'; 

    encrypt(plaintext, a, b, ciphertext);

    printf("Ciphertext: %s\n", ciphertext);

    return 0;
}
